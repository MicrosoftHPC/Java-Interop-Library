<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="SOAtest">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="D:\Java\eclipse"/>
    <property name="CXF_HOME" value="D:\Java\apache-cxf-2.4.0" />
    <property name="SD_PATH" value="D:\HPCv3sp1" />
    <property name="junit.output.dir" value="junit"/>
    <property name="SOA.location" value="../SOA"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
  <property name="src.dir" value="${basedir}/test" />
  <!-- output directory used for EMMA coverage reports: -->
  <property name="coverage.dir" value="${basedir}/coverage" />
  <!-- directory that contains emma.jar and emma_ant.jar: -->
  <property name="emma.dir" value="D:\Java\emma-2.0.5312\lib" />
  <!-- path element used by EMMA taskdef below: -->
  <path id="emma.lib" >
    <pathelement location="${emma.dir}/emma.jar" />
    <pathelement location="${emma.dir}/emma_ant.jar" />
  </path>
  <!-- this loads <emma> and <emmajava> custom tasks: -->
  <taskdef resource="emma_ant.properties" classpathref="emma.lib" />
  

  <path id="CXF.userclasspath">
        <pathelement location="${CXF_HOME}/lib/antlr-2.7.7.jar"/>
        <pathelement location="${CXF_HOME}/lib/aopalliance-1.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/asm-3.3.jar"/>
        <pathelement location="${CXF_HOME}/lib/commons-collections-3.2.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/commons-lang-2.6.jar"/>
        <pathelement location="${CXF_HOME}/lib/commons-logging-1.1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/commons-pool-1.5.5.jar"/>
        <pathelement location="${CXF_HOME}/lib/cxf-2.4.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/cxf-manifest.jar"/>
        <pathelement location="${CXF_HOME}/lib/cxf-xjc-boolean-2.3.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/cxf-xjc-bug671-2.3.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/cxf-xjc-dv-2.3.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/cxf-xjc-ts-2.3.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/FastInfoset-1.2.9.jar"/>
        <pathelement location="${CXF_HOME}/lib/geronimo-activation_1.1_spec-1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/geronimo-annotation_1.0_spec-1.1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/geronimo-javamail_1.4_spec-1.7.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/geronimo-jaxws_2.2_spec-1.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/geronimo-jms_1.1_spec-1.1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/geronimo-servlet_3.0_spec-1.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/geronimo-stax-api_1.0_spec-1.0.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/geronimo-ws-metadata_2.0_spec-1.1.3.jar"/>
        <pathelement location="${CXF_HOME}/lib/isorelax-20030108.jar"/>
        <pathelement location="${CXF_HOME}/lib/jaxb-api-2.2.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/jaxb-impl-2.2.1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/jaxb-xjc-2.2.1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/jettison-1.3.jar"/>
        <pathelement location="${CXF_HOME}/lib/jetty-continuation-7.3.1.v20110307.jar"/>
        <pathelement location="${CXF_HOME}/lib/jetty-http-7.3.1.v20110307.jar"/>
        <pathelement location="${CXF_HOME}/lib/jetty-io-7.3.1.v20110307.jar"/>
        <pathelement location="${CXF_HOME}/lib/jetty-security-7.3.1.v20110307.jar"/>
        <pathelement location="${CXF_HOME}/lib/jetty-server-7.3.1.v20110307.jar"/>
        <pathelement location="${CXF_HOME}/lib/jetty-util-7.3.1.v20110307.jar"/>
        <pathelement location="${CXF_HOME}/lib/joda-time-1.6.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/jra-1.0-alpha-4.jar"/>
        <pathelement location="${CXF_HOME}/lib/js-1.7R2.jar"/>
        <pathelement location="${CXF_HOME}/lib/jsr311-api-1.1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/msv-core-2010.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/neethi-3.0.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/opensaml-2.4.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/openws-1.4.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/oro-2.0.8.jar"/>
        <pathelement location="${CXF_HOME}/lib/relaxngDatatype-20020414.jar"/>
        <pathelement location="${CXF_HOME}/lib/saaj-api-1.3.jar"/>
        <pathelement location="${CXF_HOME}/lib/saaj-impl-1.3.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/serializer-2.7.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/slf4j-api-1.6.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/slf4j-jdk14-1.6.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-aop-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-asm-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-beans-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-context-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-core-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-expression-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-jms-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-tx-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/spring-web-3.0.5.RELEASE.jar"/>
        <pathelement location="${CXF_HOME}/lib/stax2-api-3.1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/velocity-1.6.4.jar"/>
        <pathelement location="${CXF_HOME}/lib/woodstox-core-asl-4.1.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/wsdl4j-1.6.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/wss4j-1.6.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/xalan-2.7.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/xmlbeans-2.4.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/xml-resolver-1.2.jar"/>
        <pathelement location="${CXF_HOME}/lib/xmlschema-core-2.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/xmlsec-1.4.4.jar"/>
        <pathelement location="${CXF_HOME}/lib/xmltooling-1.3.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/xsdlib-2010.1.jar"/>
        <pathelement location="${CXF_HOME}/lib/endorsed/geronimo-jaxws_2.2_spec-1.0.jar"/>
        <pathelement location="${CXF_HOME}/lib/endorsed/jaxb-api-2.2.1.jar"/>
    </path>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit_4.8.1.v4_8_1_v20100427-1100/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
    </path>
    <path id="TestServices.userclasspath">
        <pathelement location="${SD_PATH}/private/tests/AITest/E2ETest/JavaSampleCode/TestServiceClient/AITestLibService.jar"/>
    </path>
    <path id="SOA.classpath">
        <pathelement location="${SOA.location}/bin"/>
        <path refid="CXF.userclasspath"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="${SD_PATH}/private/tests/AITest/E2ETest/JavaSampleCode/TestServiceClient/AITestLibService.jar"/>
    </path>
    <path id="SOAtest.classpath">
        <pathelement location="bin"/>
        <pathelement location="${SOA.location}/outinstr" />
      <path refid="CXF.userclasspath"/>
      <path refid="JUnit 4.libraryclasspath"/>
      <path refid="TestServices.userclasspath"/>
      <path refid="SOA.classpath"/>
      <path refid="emma.lib" />

    </path>

  <target name="emma" description="turns on EMMA's instrumentation/reporting" >
    <property name="emma.enabled" value="true" />
    <property name="out.instr.dir" value="${basedir}/outinstr" />
    <mkdir dir="${out.instr.dir}" />
    <property name="emma.filter" value="" />
  </target>


  <target name="init" depends="clean">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="${src.dir}">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
      <delete dir="${basedir}/outinstr" />
      <delete dir="${basedir}/coverage" />
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${SOA.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${SOA.location}" inheritAll="false">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
          <target name="emma" />
          <target name="build"/>
          
        </ant>
    </target>
 
 
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="${src.dir}/functiontest"/>
            <classpath refid="SOAtest.classpath"/>
        </javac>
    	<javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
    	            <src path="${src.dir}/fullpass"/>
    	            <classpath refid="SOAtest.classpath"/>
    	        </javac>
    	<javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
    	            <src path="${src.dir}/stresstest"/>
    	            <classpath refid="SOAtest.classpath"/>
    	        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    
    <target name="BVT">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="functiontest.BVT" todir="${junit.output.dir}"/>
            <classpath refid="SOAtest.classpath"/>
          <jvmarg value="-Demma.coverage.out.file=${SOA.location}/coverage/coverage.emma" />
          <jvmarg value="-Demma.coverage.out.merge=false" />
        </junit>
      
    </target>
    <target name="BVT.test_BVT_CreateDurableSession">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="functiontest.BVT_one" todir="${junit.output.dir}"/>
            <classpath refid="SOAtest.classpath"/>
          <jvmarg value="-Demma.coverage.out.file=${SOA.location}/coverage/coverage.emma" />
          <jvmarg value="-Demma.coverage.out.merge=false" />
        </junit>
     
    </target>
      
    <target name="CommonDataTestInteractive.DataClient_BrokerClient_E2E_1">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="functiontest.CommonDataTestInteractive" todir="${junit.output.dir}"/>
            <classpath refid="SOAtest.classpath"/>
        </junit>
    </target>
    <target name="Full">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="fullpass.Full" todir="${junit.output.dir}"/>
            <classpath refid="SOAtest.classpath"/>
        </junit>
    </target>
    <target name="functiontest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="functiontest.BVT" todir="${junit.output.dir}"/>
            <test name="functiontest.BrokerClientTest" todir="${junit.output.dir}"/>
            <test name="functiontest.BrokerResponseTest" todir="${junit.output.dir}"/>
            <test name="functiontest.CommonDataTestDurable" todir="${junit.output.dir}"/>
            <test name="functiontest.CommonDataTestInteractive" todir="${junit.output.dir}"/>
            <test name="functiontest.DataClientTest" todir="${junit.output.dir}"/>
            <test name="functiontest.DurableSessionTest" todir="${junit.output.dir}"/>
            <test name="functiontest.GenericServiceTest" todir="${junit.output.dir}"/>
            <test name="functiontest.SessionAttachInfoTest" todir="${junit.output.dir}"/>
            <test name="functiontest.SessionBaseTest" todir="${junit.output.dir}"/>
            <test name="functiontest.SessionPool" todir="${junit.output.dir}"/>
            <test name="functiontest.SessionStartInfoTest" todir="${junit.output.dir}"/>
            <test name="functiontest.SessionTest" todir="${junit.output.dir}"/>
            <classpath refid="SOAtest.classpath"/>
        </junit>
    </target>
    <target name="Stress">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="stresstest.Stress" todir="${junit.output.dir}"/>
            <classpath refid="SOAtest.classpath"/>
        </junit>
    </target>

  <target name="emmareport">
    <emma enabled="${emma.enabled}" >
      <report sourcepath="${SOA.location}/src"
              sort="+block,+name,+method,+class"
              metrics="method:70,block:80,line:80,class:100"
      >
       
        <fileset dir="${SOA.location}/coverage" >
          <include name="*.emma" />
        </fileset>

        
        <txt outfile="${SOA.location}/coverage/coverage.txt"
             depth="package"
             columns="class,method,block,line,name"
        />
        <xml outfile="${SOA.location}/coverage/coverage.xml"
             depth="package"
        />
        <html outfile="${SOA.location}/coverage/coverage.html"
             depth="method"
             columns="name,class,method,block,line"
        />
      </report>
    </emma>
  </target>
      
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
